revoke delete on table "public"."AI_config" from "anon";

revoke insert on table "public"."AI_config" from "anon";

revoke references on table "public"."AI_config" from "anon";

revoke select on table "public"."AI_config" from "anon";

revoke trigger on table "public"."AI_config" from "anon";

revoke truncate on table "public"."AI_config" from "anon";

revoke update on table "public"."AI_config" from "anon";

revoke delete on table "public"."AI_config" from "authenticated";

revoke insert on table "public"."AI_config" from "authenticated";

revoke references on table "public"."AI_config" from "authenticated";

revoke select on table "public"."AI_config" from "authenticated";

revoke trigger on table "public"."AI_config" from "authenticated";

revoke truncate on table "public"."AI_config" from "authenticated";

revoke update on table "public"."AI_config" from "authenticated";

revoke delete on table "public"."AI_config" from "service_role";

revoke insert on table "public"."AI_config" from "service_role";

revoke references on table "public"."AI_config" from "service_role";

revoke select on table "public"."AI_config" from "service_role";

revoke trigger on table "public"."AI_config" from "service_role";

revoke truncate on table "public"."AI_config" from "service_role";

revoke update on table "public"."AI_config" from "service_role";

alter table "public"."jobs" drop constraint "jobs_AIconfig_id_fkey";

alter table "public"."jobs" drop constraint "jobs_harvest_jobs_key";

alter table "public"."applications" drop constraint "applications_job_id_fkey";

alter table "public"."AI_config" drop constraint "AI_config_pkey";

alter table "public"."applications" drop constraint "applications_pkey";

alter table "public"."jobs" drop constraint "jobs_pkey";

drop index if exists "public"."AI_config_pkey";

drop index if exists "public"."jobs_harvest_jobs_key";

drop index if exists "public"."applications_pkey";

drop index if exists "public"."jobs_pkey";

drop table "public"."AI_config";

create table "public"."bots" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "name" text,
    "voice_id" text,
    "description" text,
    "prompt" text,
    "company_id" uuid,
    "icon" text,
    "role" text
);


alter table "public"."bots" enable row level security;

create table "public"."company_context" (
    "id" uuid not null default gen_random_uuid(),
    "created_at" timestamp with time zone not null default now(),
    "description" text,
    "culture" text,
    "goals" text,
    "history" text,
    "products" text,
    "customers" text
);


alter table "public"."company_context" enable row level security;

create table "public"."job_interview_config" (
    "job_id" uuid not null default gen_random_uuid(),
    "created_at" timestamp with time zone not null default now(),
    "interview_questions" jsonb,
    "company_context" uuid,
    "bot_id" bigint,
    "duration" smallint,
    "type" text,
    "interview_name" text,
    "hiring_manager_notes" text
);


alter table "public"."job_interview_config" enable row level security;

alter table "public"."companies" add column "billing_address" text;

alter table "public"."companies" add column "merge_account_token" text;

alter table "public"."companies" add column "payment_method" text;

alter table "public"."jobs" drop column "AIconfig_id";

alter table "public"."jobs" drop column "harvest_jobs";

alter table "public"."jobs" drop column "id";

alter table "public"."jobs" add column "merge_id" uuid not null default gen_random_uuid();

CREATE UNIQUE INDEX bots_pkey ON public.bots USING btree (id);

CREATE UNIQUE INDEX company_context_pkey ON public.company_context USING btree (id);

CREATE UNIQUE INDEX job_interview_config_pkey ON public.job_interview_config USING btree (job_id);

CREATE UNIQUE INDEX jobs_merge_id_key ON public.jobs USING btree (merge_id);

CREATE UNIQUE INDEX applications_pkey ON public.applications USING btree (applicant_id, job_id);

CREATE UNIQUE INDEX jobs_pkey ON public.jobs USING btree (merge_id);

alter table "public"."bots" add constraint "bots_pkey" PRIMARY KEY using index "bots_pkey";

alter table "public"."company_context" add constraint "company_context_pkey" PRIMARY KEY using index "company_context_pkey";

alter table "public"."job_interview_config" add constraint "job_interview_config_pkey" PRIMARY KEY using index "job_interview_config_pkey";

alter table "public"."applications" add constraint "applications_pkey" PRIMARY KEY using index "applications_pkey";

alter table "public"."jobs" add constraint "jobs_pkey" PRIMARY KEY using index "jobs_pkey";

alter table "public"."bots" add constraint "bots_company_id_fkey" FOREIGN KEY (company_id) REFERENCES companies(id) not valid;

alter table "public"."bots" validate constraint "bots_company_id_fkey";

alter table "public"."company_context" add constraint "company_context_id_fkey" FOREIGN KEY (id) REFERENCES companies(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."company_context" validate constraint "company_context_id_fkey";

alter table "public"."job_interview_config" add constraint "job_interview_config_bot_id_fkey" FOREIGN KEY (bot_id) REFERENCES bots(id) not valid;

alter table "public"."job_interview_config" validate constraint "job_interview_config_bot_id_fkey";

alter table "public"."job_interview_config" add constraint "job_interview_config_company_context_fkey" FOREIGN KEY (company_context) REFERENCES company_context(id) not valid;

alter table "public"."job_interview_config" validate constraint "job_interview_config_company_context_fkey";

alter table "public"."job_interview_config" add constraint "job_interview_config_job_id_fkey" FOREIGN KEY (job_id) REFERENCES jobs(merge_id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."job_interview_config" validate constraint "job_interview_config_job_id_fkey";

alter table "public"."job_interview_config" add constraint "job_interview_config_job_id_fkey1" FOREIGN KEY (job_id) REFERENCES jobs(merge_id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."job_interview_config" validate constraint "job_interview_config_job_id_fkey1";

alter table "public"."jobs" add constraint "jobs_merge_id_key" UNIQUE using index "jobs_merge_id_key";

alter table "public"."applications" add constraint "applications_job_id_fkey" FOREIGN KEY (job_id) REFERENCES jobs(merge_id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."applications" validate constraint "applications_job_id_fkey";

set check_function_bodies = off;

CREATE OR REPLACE FUNCTION public.handle_new_job_interview_config()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$BEGIN
    -- First create the job_interview_config record
    INSERT INTO public.job_interview_config (
        job_id,
        created_at,
        company_context,
        bot_id,
        duration,
        interview_name,
        type,
        hiring_manager_notes
    ) VALUES (
        NEW.merge_id,
        NOW(),
        NEW.company_id,
        null,
        null,
        null,
        null,
        null
    );

    RETURN NEW;
END;$function$
;

grant delete on table "public"."bots" to "anon";

grant insert on table "public"."bots" to "anon";

grant references on table "public"."bots" to "anon";

grant select on table "public"."bots" to "anon";

grant trigger on table "public"."bots" to "anon";

grant truncate on table "public"."bots" to "anon";

grant update on table "public"."bots" to "anon";

grant delete on table "public"."bots" to "authenticated";

grant insert on table "public"."bots" to "authenticated";

grant references on table "public"."bots" to "authenticated";

grant select on table "public"."bots" to "authenticated";

grant trigger on table "public"."bots" to "authenticated";

grant truncate on table "public"."bots" to "authenticated";

grant update on table "public"."bots" to "authenticated";

grant delete on table "public"."bots" to "service_role";

grant insert on table "public"."bots" to "service_role";

grant references on table "public"."bots" to "service_role";

grant select on table "public"."bots" to "service_role";

grant trigger on table "public"."bots" to "service_role";

grant truncate on table "public"."bots" to "service_role";

grant update on table "public"."bots" to "service_role";

grant delete on table "public"."company_context" to "anon";

grant insert on table "public"."company_context" to "anon";

grant references on table "public"."company_context" to "anon";

grant select on table "public"."company_context" to "anon";

grant trigger on table "public"."company_context" to "anon";

grant truncate on table "public"."company_context" to "anon";

grant update on table "public"."company_context" to "anon";

grant delete on table "public"."company_context" to "authenticated";

grant insert on table "public"."company_context" to "authenticated";

grant references on table "public"."company_context" to "authenticated";

grant select on table "public"."company_context" to "authenticated";

grant trigger on table "public"."company_context" to "authenticated";

grant truncate on table "public"."company_context" to "authenticated";

grant update on table "public"."company_context" to "authenticated";

grant delete on table "public"."company_context" to "service_role";

grant insert on table "public"."company_context" to "service_role";

grant references on table "public"."company_context" to "service_role";

grant select on table "public"."company_context" to "service_role";

grant trigger on table "public"."company_context" to "service_role";

grant truncate on table "public"."company_context" to "service_role";

grant update on table "public"."company_context" to "service_role";

grant delete on table "public"."job_interview_config" to "anon";

grant insert on table "public"."job_interview_config" to "anon";

grant references on table "public"."job_interview_config" to "anon";

grant select on table "public"."job_interview_config" to "anon";

grant trigger on table "public"."job_interview_config" to "anon";

grant truncate on table "public"."job_interview_config" to "anon";

grant update on table "public"."job_interview_config" to "anon";

grant delete on table "public"."job_interview_config" to "authenticated";

grant insert on table "public"."job_interview_config" to "authenticated";

grant references on table "public"."job_interview_config" to "authenticated";

grant select on table "public"."job_interview_config" to "authenticated";

grant trigger on table "public"."job_interview_config" to "authenticated";

grant truncate on table "public"."job_interview_config" to "authenticated";

grant update on table "public"."job_interview_config" to "authenticated";

grant delete on table "public"."job_interview_config" to "service_role";

grant insert on table "public"."job_interview_config" to "service_role";

grant references on table "public"."job_interview_config" to "service_role";

grant select on table "public"."job_interview_config" to "service_role";

grant trigger on table "public"."job_interview_config" to "service_role";

grant truncate on table "public"."job_interview_config" to "service_role";

grant update on table "public"."job_interview_config" to "service_role";

create policy "Modify bots"
on "public"."bots"
as permissive
for all
to authenticated
using ((EXISTS ( SELECT 1
   FROM recruiters
  WHERE (recruiters.id = auth.uid()))));


create policy "policy_name"
on "public"."companies"
as permissive
for all
to authenticated
using ((EXISTS ( SELECT 1
   FROM recruiters r
  WHERE (r.id = auth.uid()))));


create policy "Allow recruiters to modify company_context"
on "public"."company_context"
as permissive
for all
to public
using ((EXISTS ( SELECT 1
   FROM recruiters
  WHERE (recruiters.id = auth.uid()))));


create policy "Edit job config"
on "public"."job_interview_config"
as permissive
for all
to authenticated
using ((EXISTS ( SELECT 1
   FROM recruiters
  WHERE (recruiters.id = auth.uid()))));


CREATE TRIGGER on_job_created AFTER INSERT ON public.jobs FOR EACH ROW EXECUTE FUNCTION handle_new_job_interview_config();



-- Found drop statements in schema diff. Please double check if these are expected:
-- alter table "public"."jobs" drop constraint "jobs_AIconfig_id_fkey"           
-- alter table "public"."jobs" drop constraint "jobs_harvest_jobs_key"           
-- alter table "public"."applications" drop constraint "applications_job_id_fkey"
-- alter table "public"."AI_config" drop constraint "AI_config_pkey"             
-- alter table "public"."applications" drop constraint "applications_pkey"       
-- alter table "public"."jobs" drop constraint "jobs_pkey"                       
-- drop index if exists "public"."AI_config_pkey"                                
-- drop index if exists "public"."jobs_harvest_jobs_key"                         
-- drop index if exists "public"."applications_pkey"                             
-- drop index if exists "public"."jobs_pkey"                                     
-- drop table "public"."AI_config"                                               
-- alter table "public"."jobs" drop column "AIconfig_id"                         
-- alter table "public"."jobs" drop column "harvest_jobs"                        
-- alter table "public"."jobs" drop column "id"